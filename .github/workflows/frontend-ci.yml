name: Frontend CI - DurvalCRM

# Triggers: runs on pushes to main, develop and feature branches, plus pull requests
on:
  push:
    branches: [ 'main', 'develop', 'feature/*' ]
  pull_request:
    branches: [ 'main', 'develop' ]

# Global environment variables
env:
  NODE_VERSION: '18'
  CACHE_KEY_PREFIX: 'durvalcrm-frontend'

jobs:
  # Job for tests and quality checks
  test:
    name: Unit Tests & Quality Checks  
    runs-on: ubuntu-latest
    
    # Timeout to avoid infinite jobs
    timeout-minutes: 15

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for better coverage reports
          fetch-depth: 0

      # 2. Setup Node.js with cache
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'durvalcrm-frontend/package-lock.json'

      # 3. Change to frontend directory for all subsequent steps
      - name: Navigate to frontend directory
        run: cd durvalcrm-frontend
        
      # 4. Install dependencies
      - name: Install dependencies
        run: |
          cd durvalcrm-frontend
          echo "Installing frontend dependencies..."
          npm ci --prefer-offline --no-audit
        
      # 5. Run linting
      - name: Run ESLint
        run: |
          cd durvalcrm-frontend
          echo "Running ESLint checks..."
          npm run lint

      # 6. Run type checking
      - name: Type checking
        run: |
          cd durvalcrm-frontend
          echo "Running TypeScript type checking..."
          npm run type-check

      # 7. Run unit tests
      - name: Run unit tests
        run: |
          cd durvalcrm-frontend
          echo "Running unit tests..."
          npm run test:run

      # 8. Run tests with coverage
      - name: Run tests with coverage
        run: |
          cd durvalcrm-frontend
          echo "Running tests with coverage..."
          npm run test:coverage
        
      # 9. Upload coverage reports
      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            durvalcrm-frontend/coverage/
          retention-days: 7

      # 10. Build application
      - name: Build application
        run: |
          cd durvalcrm-frontend
          echo "Building application for production..."
          npm run build

      # 11. Upload build artifacts
      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            durvalcrm-frontend/dist/
          retention-days: 7

  # Job for security and dependency checks
  security:
    name: Security & Dependency Checks
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'durvalcrm-frontend/package-lock.json'

      # Security audit
      - name: Run security audit
        run: |
          cd durvalcrm-frontend
          echo "Running npm security audit..."
          npm audit --audit-level=moderate || echo "Security audit completed with warnings"

      # Check for outdated dependencies
      - name: Check outdated dependencies
        run: |
          cd durvalcrm-frontend
          echo "Checking for outdated dependencies..."
          npm outdated || echo "Outdated dependencies check completed"

      # Install dependencies for license check
      - name: Install dependencies
        run: |
          cd durvalcrm-frontend
          npm ci --prefer-offline --no-audit

      # License compliance check (if needed)
      - name: License compliance check
        run: |
          cd durvalcrm-frontend
          echo "Checking license compliance..."
          npx license-checker --summary || echo "License check completed"
        continue-on-error: true

  # Job for build performance analysis
  build-analysis:
    name: Build Analysis
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: 'durvalcrm-frontend/package-lock.json'

      - name: Install dependencies
        run: |
          cd durvalcrm-frontend
          npm ci --prefer-offline --no-audit

      - name: Build and analyze bundle
        run: |
          cd durvalcrm-frontend
          echo "Building and analyzing bundle size..."
          npm run build
          
          # Basic bundle analysis
          echo "üìä Build Analysis Results:"
          echo "=========================="
          
          if [ -d "dist" ]; then
            echo "‚úÖ Build successful!"
            echo "üìÅ Build directory size:"
            du -sh dist/
            
            echo ""
            echo "üìÑ Main files:"
            find dist/ -name "*.js" -o -name "*.css" | head -10 | while read file; do
              size=$(du -h "$file" | cut -f1)
              echo "  $file: $size"
            done
          else
            echo "‚ùå Build failed!"
            exit 1
          fi

      # Comment on PR with build info (optional)
      - name: Comment build analysis on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let comment = '## üöÄ Build Analysis\n\n';
            
            try {
              // Get build stats
              const distPath = 'durvalcrm-frontend/dist';
              if (fs.existsSync(distPath)) {
                comment += '‚úÖ **Build Status**: Success\n\n';
                
                // Add basic info
                comment += '### üìä Build Summary\n';
                comment += '- ‚úÖ TypeScript compilation: Passed\n';
                comment += '- ‚úÖ Tests: Passed\n';
                comment += '- ‚úÖ Lint: Passed\n';
                comment += '- ‚úÖ Build: Passed\n';
              } else {
                comment += '‚ùå **Build Status**: Failed\n';
              }
            } catch (error) {
              comment += '‚ö†Ô∏è **Build Status**: Analysis failed\n';
            }
            
            comment += '\n---\n*Automated comment by GitHub Actions*';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
        continue-on-error: true