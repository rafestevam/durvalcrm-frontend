<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>br.com.durvalcrm</groupId>
    <artifactId>durvalcrm-frontend</artifactId>
    <version>1.0.0</version>
    <packaging>war</packaging>
    
    <name>DurvalCRM Frontend</name>
    <description>Frontend do DurvalCRM para deployment em WildFly</description>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <frontend-maven-plugin.version>1.15.0</frontend-maven-plugin.version>
        <node.version>v20.10.0</node.version>
        <npm.version>10.2.3</npm.version>

        <!--
        Skip frontend build during IDE incremental builds (set to false for CLI builds)

        IDE Configuration:
        - Eclipse/VS Code: The .m2e/lifecycle-mapping.xml file tells the IDE to ignore frontend-maven-plugin
        - Default: skipFrontend=true (prevents automatic npm builds during IDE refresh)
        - Profiles override this to false when building via CLI (mvn clean package)

        Usage:
        - For development: Use "npm run dev" directly instead of Maven
        - For production builds: Use "mvn clean package -Pdevelopment" (or -Pstaging/-Pproduction)
        - To force build in IDE: Right-click project > Run As > Maven Build... > Goals: "clean package"
        -->
        <skipFrontend>true</skipFrontend>
        
        <!-- Deployment Configuration -->
        <!-- 
        Usage Examples:
        - Development: mvn clean package wildfly:deploy
        - Staging: mvn clean package deploy -Pstaging
        - Production: mvn clean package wildfly:deploy -Pproduction
        
        Staging Environment:
        - Console: https://localhost:9443/wildfly/ (admin/admin123)
        - Application will be available at: https://localhost:9443/crm/
        - Frontend SPA: https://localhost:9443/crm/
        
        Testing Deployment:
        1. Start Vagrant VM: vagrant up (in deployment/environments/staging/Vagrant/)
        2. Deploy: mvn clean package deploy -Pstaging
        3. Access: https://localhost:9443/crm/
        
        Note: Staging uses SSH + WildFly CLI for deployment respecting HTTPS-only architecture
        -->
    </properties>
    
    <dependencies>
        <!-- Jakarta Servlet API for ProxyServlet and SecurityHeadersFilter -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.0.0</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    
    <build>
        <finalName>durvalcrm-frontend</finalName>
        
        <plugins>
            <!-- Plugin para instalar Node e NPM -->
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>${frontend-maven-plugin.version}</version>

                <configuration>
                    <workingDirectory>.</workingDirectory>
                    <installDirectory>target</installDirectory>
                    <!-- Skip during Eclipse/IDE incremental builds -->
                    <skip>${skipFrontend}</skip>
                </configuration>

                <executions>
                    <!-- Instalar Node e NPM -->
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <nodeVersion>${node.version}</nodeVersion>
                            <npmVersion>${npm.version}</npmVersion>
                        </configuration>
                    </execution>

                    <!-- Instalar dependências -->
                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <arguments>install --legacy-peer-deps</arguments>
                        </configuration>
                    </execution>

                    <!-- Build do Vue -->
                    <execution>
                        <id>npm run build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
            
            <!-- Plugin WAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <warSourceDirectory>src/main/webapp</warSourceDirectory>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <webResources>
                        <resource>
                            <directory>dist</directory>
                            <targetPath>/</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            
            <!-- WildFly Maven Plugin for Deployment -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>4.2.0.Final</version>
                <configuration>
                    <hostname>${wildfly.hostname}</hostname>
                    <port>${wildfly.port}</port>
                    <protocol>${wildfly.protocol}</protocol>
                    <username>${wildfly.username}</username>
                    <password>${wildfly.password}</password>
                    <timeout>60000</timeout>
                    <filename>${project.build.finalName}.war</filename>
                    <name>durvalcrm-frontend.war</name>
                    <force>true</force>
                </configuration>
            </plugin>
            
            <!-- Maven Exec Plugin for SSH-based deployment to staging -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <executable>echo</executable>
                    <arguments>
                        <argument>WildFly CLI deployment not configured for this profile</argument>
                    </arguments>
                </configuration>
            </plugin>
            
            <!-- Plugin para limpar diretórios -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>dist</directory>
                        </fileset>
                        <fileset>
                            <directory>node_modules</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
        <!-- Development Profile -->
        <profile>
            <id>development</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <maven.test.skip>false</maven.test.skip>
                <skipFrontend>false</skipFrontend>
                <wildfly.hostname>127.0.0.1</wildfly.hostname>
                <wildfly.port>9991</wildfly.port>
                <wildfly.protocol>remote+http</wildfly.protocol>
                <wildfly.username>admin</wildfly.username>
                <wildfly.password>admin123</wildfly.password>
            </properties>
        </profile>
        
        <!-- Staging Profile -->
        <!-- Deploy to WildFly through NGINX proxy at https://localhost:9443/wildfly -->
        <!-- Uses HTTPS proxy since only port 9443 is exposed from VM -->
        <profile>
            <id>staging</id>
            <properties>
                <maven.test.skip>true</maven.test.skip>
                <skipFrontend>false</skipFrontend>
                <!-- Alternative: Use SSH tunnel to access WildFly management directly -->
                <wildfly.hostname>localhost</wildfly.hostname>
                <wildfly.port>9443</wildfly.port>
                <wildfly.protocol>remote+https</wildfly.protocol>
                <wildfly.username>admin</wildfly.username>
                <wildfly.password>admin123</wildfly.password>
                <!-- Additional staging-specific properties -->
                <wildfly.deployment.name>durvalcrm-frontend.war</wildfly.deployment.name>
                <wildfly.context.root>/durvalcrm-frontend</wildfly.context.root>
                <wildfly.managementUrl>https://localhost:9443/management/</wildfly.managementUrl>
                
                <!-- SSH connection properties for staging deployment -->
                <staging.ssh.host>127.0.0.1</staging.ssh.host>
                <staging.ssh.port>2222</staging.ssh.port>
                <staging.ssh.user>vagrant</staging.ssh.user>
                <staging.ssh.key>/Users/rafaeldeoliveira/projects/DurvalCRM/durvalcrm-deployment/environments/staging/Vagrant/.vagrant/machines/default/vmware_desktop/private_key</staging.ssh.key>
            </properties>
            <build>
                <plugins>
                    <!-- Skip default deployment to repository -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>3.1.2</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <configuration>
                            <hostname>${wildfly.hostname}</hostname>
                            <port>${wildfly.port}</port>
                            <protocol>${wildfly.protocol}</protocol>
                            <username>${wildfly.username}</username>
                            <password>${wildfly.password}</password>
                            <managementUrl>${wildfly.managementUrl}</managementUrl>
                            <timeout>180000</timeout>
                            <filename>${project.build.finalName}.war</filename>
                            <force>true</force>
                            <!-- Add staging-specific deployment options -->
                            <checkPackaging>false</checkPackaging>
                            <!-- Runtime name for the deployment -->
                            <name>${project.build.finalName}.war</name>

                        </configuration>
                    </plugin>
                    
                    <!-- Frontend plugin override for staging mode -->
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.15.0</version>
                        <executions>
                            <!-- Build do Vue em modo staging -->
                            <execution>
                                <id>npm run build:staging</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>run build:staging</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <!-- SSH-based deployment using shell script -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy-to-staging</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.basedir}/deploy-staging.sh</executable>
                                    <arguments>
                                        <argument>${project.build.directory}/${project.build.finalName}.war</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- Production Profile -->
        <profile>
            <id>production</id>
            <properties>
                <maven.test.skip>true</maven.test.skip>
                <skipFrontend>false</skipFrontend>
                <!-- Production configuration for durvalcrm.org domain with HTTPS on port 9443 -->
                <wildfly.hostname>durvalcrm.org</wildfly.hostname>
                <wildfly.port>9443</wildfly.port>
                <wildfly.protocol>remote+https</wildfly.protocol>
                <wildfly.username>admin</wildfly.username>
                <wildfly.password>admin123</wildfly.password>
                <!-- Additional production-specific properties -->
                <wildfly.deployment.name>durvalcrm-frontend.war</wildfly.deployment.name>
                <wildfly.context.root>/durvalcrm-frontend</wildfly.context.root>
                <wildfly.managementUrl>https://durvalcrm.org:9443/management/</wildfly.managementUrl>
                
                <!-- SSH connection properties for production deployment -->
                <production.ssh.host>durvalcrm.org</production.ssh.host>
                <production.ssh.port>22</production.ssh.port>
                <production.ssh.user>root</production.ssh.user>
                <!-- SSH key path should be configured externally or use SSH agent -->
            </properties>
            <build>
                <plugins>
                    <!-- Skip default deployment to repository -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>3.1.2</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <configuration>
                            <hostname>${wildfly.hostname}</hostname>
                            <port>${wildfly.port}</port>
                            <protocol>${wildfly.protocol}</protocol>
                            <username>${wildfly.username}</username>
                            <password>${wildfly.password}</password>
                            <managementUrl>${wildfly.managementUrl}</managementUrl>
                            <timeout>180000</timeout>
                            <filename>${project.build.finalName}.war</filename>
                            <force>true</force>
                            <!-- Add production-specific deployment options -->
                            <checkPackaging>false</checkPackaging>
                            <!-- Runtime name for the deployment -->
                            <name>${project.build.finalName}.war</name>
                        </configuration>
                    </plugin>
                    
                    <!-- Frontend plugin override for production mode -->
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <version>1.15.0</version>
                        <executions>
                            <!-- Build do Vue em modo production -->
                            <execution>
                                <id>npm run build:production</id>
                                <goals>
                                    <goal>npm</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <arguments>run build:production</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    
                    <!-- SSH-based deployment using shell script -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy-to-production</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.basedir}/deploy-production.sh</executable>
                                    <arguments>
                                        <argument>${project.build.directory}/${project.build.finalName}.war</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>